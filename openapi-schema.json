{
  "openapi": "3.0.0",
  "info": {
    "title": "NetSuite REST API",
    "version": "1.0.0",
    "description": "Generated OpenAPI schema for NetSuite REST API."
  },
  "paths": {
    "/account": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/accountCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/accountCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/account"
              }
            }
          }
        },
        "tags": [
          "Account"
        ]
      }
    },
    "/account/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/account"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/account"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/account"
              }
            }
          }
        },
        "tags": [
          "Account"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/account"
              }
            }
          }
        },
        "tags": [
          "Account"
        ]
      }
    },
    "/accountingPeriod": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/accountingPeriodCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/accountingPeriodCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "AccountingPeriod"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/accountingPeriod"
              }
            }
          }
        },
        "tags": [
          "AccountingPeriod"
        ]
      }
    },
    "/accountingPeriod/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "AccountingPeriod"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/accountingPeriod"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/accountingPeriod"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "AccountingPeriod"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/accountingPeriod"
              }
            }
          }
        },
        "tags": [
          "AccountingPeriod"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/accountingPeriod"
              }
            }
          }
        },
        "tags": [
          "AccountingPeriod"
        ]
      }
    },
    "/advIntercompanyJournalEntry": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/advIntercompanyJournalEntryCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/advIntercompanyJournalEntryCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "AdvIntercompanyJournalEntry"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/advIntercompanyJournalEntry"
              }
            }
          }
        },
        "tags": [
          "AdvIntercompanyJournalEntry"
        ]
      }
    },
    "/advIntercompanyJournalEntry/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "AdvIntercompanyJournalEntry"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/advIntercompanyJournalEntry"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/advIntercompanyJournalEntry"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "AdvIntercompanyJournalEntry"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/advIntercompanyJournalEntry"
              }
            }
          }
        },
        "tags": [
          "AdvIntercompanyJournalEntry"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/advIntercompanyJournalEntry"
              }
            }
          }
        },
        "tags": [
          "AdvIntercompanyJournalEntry"
        ]
      }
    },
    "/assemblyBuild": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/assemblyBuildCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/assemblyBuildCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "AssemblyBuild"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/assemblyBuild"
              }
            }
          }
        },
        "tags": [
          "AssemblyBuild"
        ]
      }
    },
    "/assemblyBuild/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "AssemblyBuild"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/assemblyBuild"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/assemblyBuild"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "AssemblyBuild"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/assemblyBuild"
              }
            }
          }
        },
        "tags": [
          "AssemblyBuild"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/assemblyBuild"
              }
            }
          }
        },
        "tags": [
          "AssemblyBuild"
        ]
      }
    },
    "/assemblyBuild/{id}/!transform/assemblyUnbuild": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/assemblyUnbuild"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/assemblyUnbuild"
                }
              }
            }
          }
        },
        "summary": "Transform to assemblyUnbuild.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/assemblyUnbuild"
              }
            }
          }
        },
        "tags": [
          "AssemblyBuild"
        ]
      }
    },
    "/assemblyItem": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/assemblyItemCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/assemblyItemCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "AssemblyItem"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/assemblyItem"
              }
            }
          }
        },
        "tags": [
          "AssemblyItem"
        ]
      }
    },
    "/assemblyItem/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "AssemblyItem"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/assemblyItem"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/assemblyItem"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "AssemblyItem"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/assemblyItem"
              }
            }
          }
        },
        "tags": [
          "AssemblyItem"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/assemblyItem"
              }
            }
          }
        },
        "tags": [
          "AssemblyItem"
        ]
      }
    },
    "/assemblyItem/{id}/!transform/assemblyBuild": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/assemblyBuild"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/assemblyBuild"
                }
              }
            }
          }
        },
        "summary": "Transform to assemblyBuild.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/assemblyBuild"
              }
            }
          }
        },
        "tags": [
          "AssemblyItem"
        ]
      }
    },
    "/assemblyItem/{id}/!transform/workOrder": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrder"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrder"
                }
              }
            }
          }
        },
        "summary": "Transform to workOrder.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/workOrder"
              }
            }
          }
        },
        "tags": [
          "AssemblyItem"
        ]
      }
    },
    "/assemblyUnbuild": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/assemblyUnbuildCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/assemblyUnbuildCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "AssemblyUnbuild"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/assemblyUnbuild"
              }
            }
          }
        },
        "tags": [
          "AssemblyUnbuild"
        ]
      }
    },
    "/assemblyUnbuild/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "AssemblyUnbuild"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/assemblyUnbuild"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/assemblyUnbuild"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "AssemblyUnbuild"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/assemblyUnbuild"
              }
            }
          }
        },
        "tags": [
          "AssemblyUnbuild"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/assemblyUnbuild"
              }
            }
          }
        },
        "tags": [
          "AssemblyUnbuild"
        ]
      }
    },
    "/billingAccount": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/billingAccountCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/billingAccountCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "BillingAccount"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/billingAccount"
              }
            }
          }
        },
        "tags": [
          "BillingAccount"
        ]
      }
    },
    "/billingAccount/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "BillingAccount"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/billingAccount"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/billingAccount"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "BillingAccount"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/billingAccount"
              }
            }
          }
        },
        "tags": [
          "BillingAccount"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/billingAccount"
              }
            }
          }
        },
        "tags": [
          "BillingAccount"
        ]
      }
    },
    "/billingRevenueEvent": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/billingRevenueEventCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/billingRevenueEventCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "BillingRevenueEvent"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/billingRevenueEvent"
              }
            }
          }
        },
        "tags": [
          "BillingRevenueEvent"
        ]
      }
    },
    "/billingRevenueEvent/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "BillingRevenueEvent"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/billingRevenueEvent"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/billingRevenueEvent"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "BillingRevenueEvent"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/billingRevenueEvent"
              }
            }
          }
        },
        "tags": [
          "BillingRevenueEvent"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/billingRevenueEvent"
              }
            }
          }
        },
        "tags": [
          "BillingRevenueEvent"
        ]
      }
    },
    "/billingSchedule": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/billingScheduleCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/billingScheduleCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "BillingSchedule"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/billingSchedule"
              }
            }
          }
        },
        "tags": [
          "BillingSchedule"
        ]
      }
    },
    "/billingSchedule/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "BillingSchedule"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/billingSchedule"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/billingSchedule"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "BillingSchedule"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/billingSchedule"
              }
            }
          }
        },
        "tags": [
          "BillingSchedule"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/billingSchedule"
              }
            }
          }
        },
        "tags": [
          "BillingSchedule"
        ]
      }
    },
    "/bin": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/binCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/binCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Bin"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/bin"
              }
            }
          }
        },
        "tags": [
          "Bin"
        ]
      }
    },
    "/bin/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Bin"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/bin"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/bin"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Bin"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/bin"
              }
            }
          }
        },
        "tags": [
          "Bin"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/bin"
              }
            }
          }
        },
        "tags": [
          "Bin"
        ]
      }
    },
    "/binTransfer": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/binTransferCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/binTransferCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "BinTransfer"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/binTransfer"
              }
            }
          }
        },
        "tags": [
          "BinTransfer"
        ]
      }
    },
    "/binTransfer/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "BinTransfer"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/binTransfer"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/binTransfer"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "BinTransfer"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/binTransfer"
              }
            }
          }
        },
        "tags": [
          "BinTransfer"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/binTransfer"
              }
            }
          }
        },
        "tags": [
          "BinTransfer"
        ]
      }
    },
    "/blanketPurchaseOrder": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/blanketPurchaseOrderCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/blanketPurchaseOrderCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "BlanketPurchaseOrder"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/blanketPurchaseOrder"
              }
            }
          }
        },
        "tags": [
          "BlanketPurchaseOrder"
        ]
      }
    },
    "/blanketPurchaseOrder/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "BlanketPurchaseOrder"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/blanketPurchaseOrder"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/blanketPurchaseOrder"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "BlanketPurchaseOrder"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/blanketPurchaseOrder"
              }
            }
          }
        },
        "tags": [
          "BlanketPurchaseOrder"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/blanketPurchaseOrder"
              }
            }
          }
        },
        "tags": [
          "BlanketPurchaseOrder"
        ]
      }
    },
    "/bom": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/bomCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/bomCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Bom"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/bom"
              }
            }
          }
        },
        "tags": [
          "Bom"
        ]
      }
    },
    "/bom/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Bom"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/bom"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/bom"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Bom"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/bom"
              }
            }
          }
        },
        "tags": [
          "Bom"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/bom"
              }
            }
          }
        },
        "tags": [
          "Bom"
        ]
      }
    },
    "/bomRevision": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/bomRevisionCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/bomRevisionCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "BomRevision"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/bomRevision"
              }
            }
          }
        },
        "tags": [
          "BomRevision"
        ]
      }
    },
    "/bomRevision/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "BomRevision"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/bomRevision"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/bomRevision"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "BomRevision"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/bomRevision"
              }
            }
          }
        },
        "tags": [
          "BomRevision"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/bomRevision"
              }
            }
          }
        },
        "tags": [
          "BomRevision"
        ]
      }
    },
    "/calendarEvent": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/calendarEventCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/calendarEventCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "CalendarEvent"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/calendarEvent"
              }
            }
          }
        },
        "tags": [
          "CalendarEvent"
        ]
      }
    },
    "/calendarEvent/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "CalendarEvent"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/calendarEvent"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/calendarEvent"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CalendarEvent"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/calendarEvent"
              }
            }
          }
        },
        "tags": [
          "CalendarEvent"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/calendarEvent"
              }
            }
          }
        },
        "tags": [
          "CalendarEvent"
        ]
      }
    },
    "/campaign": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/campaign"
              }
            }
          }
        },
        "tags": [
          "Campaign"
        ]
      }
    },
    "/campaign/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Campaign"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/campaign"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/campaign"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Campaign"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/campaign"
              }
            }
          }
        },
        "tags": [
          "Campaign"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/campaign"
              }
            }
          }
        },
        "tags": [
          "Campaign"
        ]
      }
    },
    "/campaignResponse": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/campaignResponseCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/campaignResponseCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "CampaignResponse"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/campaignResponse"
              }
            }
          }
        },
        "tags": [
          "CampaignResponse"
        ]
      }
    },
    "/campaignResponse/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "CampaignResponse"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/campaignResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/campaignResponse"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CampaignResponse"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/campaignResponse"
              }
            }
          }
        },
        "tags": [
          "CampaignResponse"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/campaignResponse"
              }
            }
          }
        },
        "tags": [
          "CampaignResponse"
        ]
      }
    },
    "/cashRefund": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashRefundCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashRefundCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "CashRefund"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/cashRefund"
              }
            }
          }
        },
        "tags": [
          "CashRefund"
        ]
      }
    },
    "/cashRefund/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "CashRefund"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashRefund"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashRefund"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CashRefund"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/cashRefund"
              }
            }
          }
        },
        "tags": [
          "CashRefund"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/cashRefund"
              }
            }
          }
        },
        "tags": [
          "CashRefund"
        ]
      }
    },
    "/cashRefund/{id}/!transform/creditMemo": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/creditMemo"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/creditMemo"
                }
              }
            }
          }
        },
        "summary": "Transform to creditMemo.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/creditMemo"
              }
            }
          }
        },
        "tags": [
          "CashRefund"
        ]
      }
    },
    "/cashSale": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashSaleCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashSaleCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "CashSale"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/cashSale"
              }
            }
          }
        },
        "tags": [
          "CashSale"
        ]
      }
    },
    "/cashSale/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "CashSale"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashSale"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashSale"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CashSale"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/cashSale"
              }
            }
          }
        },
        "tags": [
          "CashSale"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/cashSale"
              }
            }
          }
        },
        "tags": [
          "CashSale"
        ]
      }
    },
    "/cashSale/{id}/!transform/cashRefund": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashRefund"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashRefund"
                }
              }
            }
          }
        },
        "summary": "Transform to cashRefund.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/cashRefund"
              }
            }
          }
        },
        "tags": [
          "CashSale"
        ]
      }
    },
    "/cashSale/{id}/!transform/returnAuthorization": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/returnAuthorization"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/returnAuthorization"
                }
              }
            }
          }
        },
        "summary": "Transform to returnAuthorization.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/returnAuthorization"
              }
            }
          }
        },
        "tags": [
          "CashSale"
        ]
      }
    },
    "/charge": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/chargeCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/chargeCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Charge"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/charge"
              }
            }
          }
        },
        "tags": [
          "Charge"
        ]
      }
    },
    "/charge/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Charge"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/charge"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/charge"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Charge"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/charge"
              }
            }
          }
        },
        "tags": [
          "Charge"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/charge"
              }
            }
          }
        },
        "tags": [
          "Charge"
        ]
      }
    },
    "/check": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/checkCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/checkCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Check"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/check"
              }
            }
          }
        },
        "tags": [
          "Check"
        ]
      }
    },
    "/check/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Check"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/check"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/check"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Check"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/check"
              }
            }
          }
        },
        "tags": [
          "Check"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/check"
              }
            }
          }
        },
        "tags": [
          "Check"
        ]
      }
    },
    "/classification": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/classificationCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/classificationCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Classification"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/classification"
              }
            }
          }
        },
        "tags": [
          "Classification"
        ]
      }
    },
    "/classification/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Classification"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/classification"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/classification"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Classification"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/classification"
              }
            }
          }
        },
        "tags": [
          "Classification"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/classification"
              }
            }
          }
        },
        "tags": [
          "Classification"
        ]
      }
    },
    "/commerceCategory": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/commerceCategoryCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/commerceCategoryCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "CommerceCategory"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/commerceCategory"
              }
            }
          }
        },
        "tags": [
          "CommerceCategory"
        ]
      }
    },
    "/commerceCategory/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "CommerceCategory"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/commerceCategory"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/commerceCategory"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CommerceCategory"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/commerceCategory"
              }
            }
          }
        },
        "tags": [
          "CommerceCategory"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/commerceCategory"
              }
            }
          }
        },
        "tags": [
          "CommerceCategory"
        ]
      }
    },
    "/competitor": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/competitorCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/competitorCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Competitor"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/competitor"
              }
            }
          }
        },
        "tags": [
          "Competitor"
        ]
      }
    },
    "/competitor/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Competitor"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/competitor"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/competitor"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Competitor"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/competitor"
              }
            }
          }
        },
        "tags": [
          "Competitor"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/competitor"
              }
            }
          }
        },
        "tags": [
          "Competitor"
        ]
      }
    },
    "/consolidatedExchangeRate": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/consolidatedExchangeRateCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/consolidatedExchangeRateCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "ConsolidatedExchangeRate"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/consolidatedExchangeRate"
              }
            }
          }
        },
        "tags": [
          "ConsolidatedExchangeRate"
        ]
      }
    },
    "/consolidatedExchangeRate/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "ConsolidatedExchangeRate"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/consolidatedExchangeRate"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/consolidatedExchangeRate"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ConsolidatedExchangeRate"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/consolidatedExchangeRate"
              }
            }
          }
        },
        "tags": [
          "ConsolidatedExchangeRate"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/consolidatedExchangeRate"
              }
            }
          }
        },
        "tags": [
          "ConsolidatedExchangeRate"
        ]
      }
    },
    "/contact": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/contactCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/contactCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Contact"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/contact"
              }
            }
          }
        },
        "tags": [
          "Contact"
        ]
      }
    },
    "/contact/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Contact"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/contact"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/contact"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Contact"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/contact"
              }
            }
          }
        },
        "tags": [
          "Contact"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/contact"
              }
            }
          }
        },
        "tags": [
          "Contact"
        ]
      }
    },
    "/contactCategory": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/contactCategoryCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/contactCategoryCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "ContactCategory"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/contactCategory"
              }
            }
          }
        },
        "tags": [
          "ContactCategory"
        ]
      }
    },
    "/contactCategory/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "ContactCategory"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/contactCategory"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/contactCategory"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ContactCategory"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/contactCategory"
              }
            }
          }
        },
        "tags": [
          "ContactCategory"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/contactCategory"
              }
            }
          }
        },
        "tags": [
          "ContactCategory"
        ]
      }
    },
    "/contactRole": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/contactRoleCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/contactRoleCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "ContactRole"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/contactRole"
              }
            }
          }
        },
        "tags": [
          "ContactRole"
        ]
      }
    },
    "/contactRole/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "ContactRole"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/contactRole"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/contactRole"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ContactRole"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/contactRole"
              }
            }
          }
        },
        "tags": [
          "ContactRole"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/contactRole"
              }
            }
          }
        },
        "tags": [
          "ContactRole"
        ]
      }
    },
    "/costCategory": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/costCategoryCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/costCategoryCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "CostCategory"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/costCategory"
              }
            }
          }
        },
        "tags": [
          "CostCategory"
        ]
      }
    },
    "/costCategory/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "CostCategory"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/costCategory"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/costCategory"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CostCategory"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/costCategory"
              }
            }
          }
        },
        "tags": [
          "CostCategory"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/costCategory"
              }
            }
          }
        },
        "tags": [
          "CostCategory"
        ]
      }
    },
    "/couponCode": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/couponCodeCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/couponCodeCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "CouponCode"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/couponCode"
              }
            }
          }
        },
        "tags": [
          "CouponCode"
        ]
      }
    },
    "/couponCode/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "CouponCode"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/couponCode"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/couponCode"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CouponCode"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/couponCode"
              }
            }
          }
        },
        "tags": [
          "CouponCode"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/couponCode"
              }
            }
          }
        },
        "tags": [
          "CouponCode"
        ]
      }
    },
    "/creditCardCharge": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/creditCardChargeCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/creditCardChargeCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "CreditCardCharge"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/creditCardCharge"
              }
            }
          }
        },
        "tags": [
          "CreditCardCharge"
        ]
      }
    },
    "/creditCardCharge/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "CreditCardCharge"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/creditCardCharge"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/creditCardCharge"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CreditCardCharge"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/creditCardCharge"
              }
            }
          }
        },
        "tags": [
          "CreditCardCharge"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/creditCardCharge"
              }
            }
          }
        },
        "tags": [
          "CreditCardCharge"
        ]
      }
    },
    "/creditCardRefund": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/creditCardRefundCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/creditCardRefundCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "CreditCardRefund"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/creditCardRefund"
              }
            }
          }
        },
        "tags": [
          "CreditCardRefund"
        ]
      }
    },
    "/creditCardRefund/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "CreditCardRefund"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/creditCardRefund"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/creditCardRefund"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CreditCardRefund"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/creditCardRefund"
              }
            }
          }
        },
        "tags": [
          "CreditCardRefund"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/creditCardRefund"
              }
            }
          }
        },
        "tags": [
          "CreditCardRefund"
        ]
      }
    },
    "/creditMemo": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/creditMemoCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/creditMemoCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "CreditMemo"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/creditMemo"
              }
            }
          }
        },
        "tags": [
          "CreditMemo"
        ]
      }
    },
    "/creditMemo/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "CreditMemo"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/creditMemo"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/creditMemo"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CreditMemo"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/creditMemo"
              }
            }
          }
        },
        "tags": [
          "CreditMemo"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/creditMemo"
              }
            }
          }
        },
        "tags": [
          "CreditMemo"
        ]
      }
    },
    "/currency": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/currencyCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/currencyCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Currency"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/currency"
              }
            }
          }
        },
        "tags": [
          "Currency"
        ]
      }
    },
    "/currency/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Currency"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/currency"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/currency"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Currency"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/currency"
              }
            }
          }
        },
        "tags": [
          "Currency"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/currency"
              }
            }
          }
        },
        "tags": [
          "Currency"
        ]
      }
    },
    "/currencyRate": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/currencyRateCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/currencyRateCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "CurrencyRate"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/currencyRate"
              }
            }
          }
        },
        "tags": [
          "CurrencyRate"
        ]
      }
    },
    "/currencyRate/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/currencyRate"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/currencyRate"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CurrencyRate"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/currencyRate"
              }
            }
          }
        },
        "tags": [
          "CurrencyRate"
        ]
      }
    },
    "/customer": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customer"
              }
            }
          }
        },
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customer"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customer"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Customer"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customer"
              }
            }
          }
        },
        "tags": [
          "Customer"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customer"
              }
            }
          }
        },
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer/{id}/!transform/cashSale": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashSale"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashSale"
                }
              }
            }
          }
        },
        "summary": "Transform to cashSale.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/cashSale"
              }
            }
          }
        },
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer/{id}/!transform/customerPayment": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerPayment"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerPayment"
                }
              }
            }
          }
        },
        "summary": "Transform to customerPayment.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerPayment"
              }
            }
          }
        },
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer/{id}/!transform/estimate": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/estimate"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/estimate"
                }
              }
            }
          }
        },
        "summary": "Transform to estimate.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/estimate"
              }
            }
          }
        },
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer/{id}/!transform/invoice": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/invoice"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/invoice"
                }
              }
            }
          }
        },
        "summary": "Transform to invoice.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/invoice"
              }
            }
          }
        },
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer/{id}/!transform/opportunity": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/opportunity"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/opportunity"
                }
              }
            }
          }
        },
        "summary": "Transform to opportunity.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/opportunity"
              }
            }
          }
        },
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer/{id}/!transform/salesOrder": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/salesOrder"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/salesOrder"
                }
              }
            }
          }
        },
        "summary": "Transform to salesOrder.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/salesOrder"
              }
            }
          }
        },
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer/{id}/!transform/vendor": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendor"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendor"
                }
              }
            }
          }
        },
        "summary": "Transform to vendor.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendor"
              }
            }
          }
        },
        "tags": [
          "Customer"
        ]
      }
    },
    "/customerCategory": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerCategoryCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerCategoryCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "CustomerCategory"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerCategory"
              }
            }
          }
        },
        "tags": [
          "CustomerCategory"
        ]
      }
    },
    "/customerCategory/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "CustomerCategory"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerCategory"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerCategory"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CustomerCategory"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerCategory"
              }
            }
          }
        },
        "tags": [
          "CustomerCategory"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerCategory"
              }
            }
          }
        },
        "tags": [
          "CustomerCategory"
        ]
      }
    },
    "/customerDeposit": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerDepositCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerDepositCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "CustomerDeposit"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerDeposit"
              }
            }
          }
        },
        "tags": [
          "CustomerDeposit"
        ]
      }
    },
    "/customerDeposit/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "CustomerDeposit"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerDeposit"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerDeposit"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CustomerDeposit"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerDeposit"
              }
            }
          }
        },
        "tags": [
          "CustomerDeposit"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerDeposit"
              }
            }
          }
        },
        "tags": [
          "CustomerDeposit"
        ]
      }
    },
    "/customerDeposit/{id}/!transform/customerRefund": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerRefund"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerRefund"
                }
              }
            }
          }
        },
        "summary": "Transform to customerRefund.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerRefund"
              }
            }
          }
        },
        "tags": [
          "CustomerDeposit"
        ]
      }
    },
    "/customerDeposit/{id}/!transform/depositApplication": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/depositApplication"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/depositApplication"
                }
              }
            }
          }
        },
        "summary": "Transform to depositApplication.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/depositApplication"
              }
            }
          }
        },
        "tags": [
          "CustomerDeposit"
        ]
      }
    },
    "/customerMessage": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerMessageCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerMessageCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "CustomerMessage"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerMessage"
              }
            }
          }
        },
        "tags": [
          "CustomerMessage"
        ]
      }
    },
    "/customerMessage/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "CustomerMessage"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerMessage"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerMessage"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CustomerMessage"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerMessage"
              }
            }
          }
        },
        "tags": [
          "CustomerMessage"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerMessage"
              }
            }
          }
        },
        "tags": [
          "CustomerMessage"
        ]
      }
    },
    "/customerPayment": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerPaymentCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerPaymentCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "CustomerPayment"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerPayment"
              }
            }
          }
        },
        "tags": [
          "CustomerPayment"
        ]
      }
    },
    "/customerPayment/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "CustomerPayment"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerPayment"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerPayment"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CustomerPayment"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerPayment"
              }
            }
          }
        },
        "tags": [
          "CustomerPayment"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerPayment"
              }
            }
          }
        },
        "tags": [
          "CustomerPayment"
        ]
      }
    },
    "/customerPayment/{id}/!transform/customerRefund": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerRefund"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerRefund"
                }
              }
            }
          }
        },
        "summary": "Transform to customerRefund.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerRefund"
              }
            }
          }
        },
        "tags": [
          "CustomerPayment"
        ]
      }
    },
    "/customerRefund": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerRefundCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerRefundCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "CustomerRefund"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerRefund"
              }
            }
          }
        },
        "tags": [
          "CustomerRefund"
        ]
      }
    },
    "/customerRefund/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "CustomerRefund"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerRefund"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerRefund"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CustomerRefund"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerRefund"
              }
            }
          }
        },
        "tags": [
          "CustomerRefund"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerRefund"
              }
            }
          }
        },
        "tags": [
          "CustomerRefund"
        ]
      }
    },
    "/customerStatus": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerStatusCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerStatusCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "CustomerStatus"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerStatus"
              }
            }
          }
        },
        "tags": [
          "CustomerStatus"
        ]
      }
    },
    "/customerStatus/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "CustomerStatus"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerStatus"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerStatus"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CustomerStatus"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerStatus"
              }
            }
          }
        },
        "tags": [
          "CustomerStatus"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerStatus"
              }
            }
          }
        },
        "tags": [
          "CustomerStatus"
        ]
      }
    },
    "/customerSubsidiaryRelationship": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerSubsidiaryRelationshipCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerSubsidiaryRelationshipCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "CustomerSubsidiaryRelationship"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerSubsidiaryRelationship"
              }
            }
          }
        },
        "tags": [
          "CustomerSubsidiaryRelationship"
        ]
      }
    },
    "/customerSubsidiaryRelationship/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "CustomerSubsidiaryRelationship"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerSubsidiaryRelationship"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerSubsidiaryRelationship"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CustomerSubsidiaryRelationship"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerSubsidiaryRelationship"
              }
            }
          }
        },
        "tags": [
          "CustomerSubsidiaryRelationship"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerSubsidiaryRelationship"
              }
            }
          }
        },
        "tags": [
          "CustomerSubsidiaryRelationship"
        ]
      }
    },
    "/department": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/departmentCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/departmentCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Department"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/department"
              }
            }
          }
        },
        "tags": [
          "Department"
        ]
      }
    },
    "/department/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Department"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/department"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/department"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Department"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/department"
              }
            }
          }
        },
        "tags": [
          "Department"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/department"
              }
            }
          }
        },
        "tags": [
          "Department"
        ]
      }
    },
    "/deposit": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/depositCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/depositCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Deposit"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/deposit"
              }
            }
          }
        },
        "tags": [
          "Deposit"
        ]
      }
    },
    "/deposit/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Deposit"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/deposit"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/deposit"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Deposit"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/deposit"
              }
            }
          }
        },
        "tags": [
          "Deposit"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/deposit"
              }
            }
          }
        },
        "tags": [
          "Deposit"
        ]
      }
    },
    "/depositApplication": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/depositApplicationCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/depositApplicationCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "DepositApplication"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/depositApplication"
              }
            }
          }
        },
        "tags": [
          "DepositApplication"
        ]
      }
    },
    "/depositApplication/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "DepositApplication"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/depositApplication"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/depositApplication"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "DepositApplication"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/depositApplication"
              }
            }
          }
        },
        "tags": [
          "DepositApplication"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/depositApplication"
              }
            }
          }
        },
        "tags": [
          "DepositApplication"
        ]
      }
    },
    "/descriptionItem": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/descriptionItemCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/descriptionItemCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "DescriptionItem"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/descriptionItem"
              }
            }
          }
        },
        "tags": [
          "DescriptionItem"
        ]
      }
    },
    "/descriptionItem/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "DescriptionItem"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/descriptionItem"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/descriptionItem"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "DescriptionItem"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/descriptionItem"
              }
            }
          }
        },
        "tags": [
          "DescriptionItem"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/descriptionItem"
              }
            }
          }
        },
        "tags": [
          "DescriptionItem"
        ]
      }
    },
    "/discountItem": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/discountItemCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/discountItemCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "DiscountItem"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/discountItem"
              }
            }
          }
        },
        "tags": [
          "DiscountItem"
        ]
      }
    },
    "/discountItem/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "DiscountItem"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/discountItem"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/discountItem"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "DiscountItem"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/discountItem"
              }
            }
          }
        },
        "tags": [
          "DiscountItem"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/discountItem"
              }
            }
          }
        },
        "tags": [
          "DiscountItem"
        ]
      }
    },
    "/downloadItem": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/downloadItemCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/downloadItemCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "DownloadItem"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/downloadItem"
              }
            }
          }
        },
        "tags": [
          "DownloadItem"
        ]
      }
    },
    "/downloadItem/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "DownloadItem"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/downloadItem"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/downloadItem"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "DownloadItem"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/downloadItem"
              }
            }
          }
        },
        "tags": [
          "DownloadItem"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/downloadItem"
              }
            }
          }
        },
        "tags": [
          "DownloadItem"
        ]
      }
    },
    "/emailTemplate": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/emailTemplateCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/emailTemplateCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "EmailTemplate"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/emailTemplate"
              }
            }
          }
        },
        "tags": [
          "EmailTemplate"
        ]
      }
    },
    "/emailTemplate/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "EmailTemplate"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/emailTemplate"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/emailTemplate"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "EmailTemplate"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/emailTemplate"
              }
            }
          }
        },
        "tags": [
          "EmailTemplate"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/emailTemplate"
              }
            }
          }
        },
        "tags": [
          "EmailTemplate"
        ]
      }
    },
    "/employee": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/employeeCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/employeeCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Employee"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/employee"
              }
            }
          }
        },
        "tags": [
          "Employee"
        ]
      }
    },
    "/employee/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Employee"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/employee"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/employee"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Employee"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/employee"
              }
            }
          }
        },
        "tags": [
          "Employee"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/employee"
              }
            }
          }
        },
        "tags": [
          "Employee"
        ]
      }
    },
    "/employee/{id}/!transform/expenseReport": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/expenseReport"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/expenseReport"
                }
              }
            }
          }
        },
        "summary": "Transform to expenseReport.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/expenseReport"
              }
            }
          }
        },
        "tags": [
          "Employee"
        ]
      }
    },
    "/employee/{id}/!transform/timeBill": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/timeBill"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/timeBill"
                }
              }
            }
          }
        },
        "summary": "Transform to timeBill.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/timeBill"
              }
            }
          }
        },
        "tags": [
          "Employee"
        ]
      }
    },
    "/estimate": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/estimateCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/estimateCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Estimate"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/estimate"
              }
            }
          }
        },
        "tags": [
          "Estimate"
        ]
      }
    },
    "/estimate/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Estimate"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/estimate"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/estimate"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Estimate"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/estimate"
              }
            }
          }
        },
        "tags": [
          "Estimate"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/estimate"
              }
            }
          }
        },
        "tags": [
          "Estimate"
        ]
      }
    },
    "/estimate/{id}/!transform/cashSale": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashSale"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashSale"
                }
              }
            }
          }
        },
        "summary": "Transform to cashSale.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/cashSale"
              }
            }
          }
        },
        "tags": [
          "Estimate"
        ]
      }
    },
    "/estimate/{id}/!transform/invoice": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/invoice"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/invoice"
                }
              }
            }
          }
        },
        "summary": "Transform to invoice.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/invoice"
              }
            }
          }
        },
        "tags": [
          "Estimate"
        ]
      }
    },
    "/estimate/{id}/!transform/salesOrder": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/salesOrder"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/salesOrder"
                }
              }
            }
          }
        },
        "summary": "Transform to salesOrder.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/salesOrder"
              }
            }
          }
        },
        "tags": [
          "Estimate"
        ]
      }
    },
    "/expenseCategory": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/expenseCategoryCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/expenseCategoryCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "ExpenseCategory"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/expenseCategory"
              }
            }
          }
        },
        "tags": [
          "ExpenseCategory"
        ]
      }
    },
    "/expenseCategory/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "ExpenseCategory"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/expenseCategory"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/expenseCategory"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ExpenseCategory"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/expenseCategory"
              }
            }
          }
        },
        "tags": [
          "ExpenseCategory"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/expenseCategory"
              }
            }
          }
        },
        "tags": [
          "ExpenseCategory"
        ]
      }
    },
    "/expenseReport": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/expenseReportCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/expenseReportCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "ExpenseReport"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/expenseReport"
              }
            }
          }
        },
        "tags": [
          "ExpenseReport"
        ]
      }
    },
    "/expenseReport/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "ExpenseReport"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/expenseReport"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/expenseReport"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ExpenseReport"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/expenseReport"
              }
            }
          }
        },
        "tags": [
          "ExpenseReport"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/expenseReport"
              }
            }
          }
        },
        "tags": [
          "ExpenseReport"
        ]
      }
    },
    "/fairValuePrice": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/fairValuePriceCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/fairValuePriceCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "FairValuePrice"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/fairValuePrice"
              }
            }
          }
        },
        "tags": [
          "FairValuePrice"
        ]
      }
    },
    "/fairValuePrice/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "FairValuePrice"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/fairValuePrice"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/fairValuePrice"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "FairValuePrice"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/fairValuePrice"
              }
            }
          }
        },
        "tags": [
          "FairValuePrice"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/fairValuePrice"
              }
            }
          }
        },
        "tags": [
          "FairValuePrice"
        ]
      }
    },
    "/fulfillmentRequest": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/fulfillmentRequestCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/fulfillmentRequestCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "FulfillmentRequest"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/fulfillmentRequest"
              }
            }
          }
        },
        "tags": [
          "FulfillmentRequest"
        ]
      }
    },
    "/fulfillmentRequest/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "FulfillmentRequest"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/fulfillmentRequest"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/fulfillmentRequest"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "FulfillmentRequest"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/fulfillmentRequest"
              }
            }
          }
        },
        "tags": [
          "FulfillmentRequest"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/fulfillmentRequest"
              }
            }
          }
        },
        "tags": [
          "FulfillmentRequest"
        ]
      }
    },
    "/giftCertificateItem": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/giftCertificateItemCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/giftCertificateItemCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "GiftCertificateItem"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/giftCertificateItem"
              }
            }
          }
        },
        "tags": [
          "GiftCertificateItem"
        ]
      }
    },
    "/giftCertificateItem/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "GiftCertificateItem"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/giftCertificateItem"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/giftCertificateItem"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "GiftCertificateItem"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/giftCertificateItem"
              }
            }
          }
        },
        "tags": [
          "GiftCertificateItem"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/giftCertificateItem"
              }
            }
          }
        },
        "tags": [
          "GiftCertificateItem"
        ]
      }
    },
    "/inboundShipment": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inboundShipmentCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inboundShipmentCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "InboundShipment"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/inboundShipment"
              }
            }
          }
        },
        "tags": [
          "InboundShipment"
        ]
      }
    },
    "/inboundShipment/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "InboundShipment"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inboundShipment"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inboundShipment"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "InboundShipment"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/inboundShipment"
              }
            }
          }
        },
        "tags": [
          "InboundShipment"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/inboundShipment"
              }
            }
          }
        },
        "tags": [
          "InboundShipment"
        ]
      }
    },
    "/intercompanyJournalEntry": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/intercompanyJournalEntryCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/intercompanyJournalEntryCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "IntercompanyJournalEntry"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/intercompanyJournalEntry"
              }
            }
          }
        },
        "tags": [
          "IntercompanyJournalEntry"
        ]
      }
    },
    "/intercompanyJournalEntry/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "IntercompanyJournalEntry"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/intercompanyJournalEntry"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/intercompanyJournalEntry"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "IntercompanyJournalEntry"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/intercompanyJournalEntry"
              }
            }
          }
        },
        "tags": [
          "IntercompanyJournalEntry"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/intercompanyJournalEntry"
              }
            }
          }
        },
        "tags": [
          "IntercompanyJournalEntry"
        ]
      }
    },
    "/intercompanyTransferOrder": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/intercompanyTransferOrderCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/intercompanyTransferOrderCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "IntercompanyTransferOrder"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/intercompanyTransferOrder"
              }
            }
          }
        },
        "tags": [
          "IntercompanyTransferOrder"
        ]
      }
    },
    "/intercompanyTransferOrder/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "IntercompanyTransferOrder"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/intercompanyTransferOrder"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/intercompanyTransferOrder"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "IntercompanyTransferOrder"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/intercompanyTransferOrder"
              }
            }
          }
        },
        "tags": [
          "IntercompanyTransferOrder"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/intercompanyTransferOrder"
              }
            }
          }
        },
        "tags": [
          "IntercompanyTransferOrder"
        ]
      }
    },
    "/intercompanyTransferOrder/{id}/!transform/itemFulfillment": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemFulfillment"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemFulfillment"
                }
              }
            }
          }
        },
        "summary": "Transform to itemFulfillment.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/itemFulfillment"
              }
            }
          }
        },
        "tags": [
          "IntercompanyTransferOrder"
        ]
      }
    },
    "/intercompanyTransferOrder/{id}/!transform/itemReceipt": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemReceipt"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemReceipt"
                }
              }
            }
          }
        },
        "summary": "Transform to itemReceipt.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/itemReceipt"
              }
            }
          }
        },
        "tags": [
          "IntercompanyTransferOrder"
        ]
      }
    },
    "/inventoryAdjustment": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryAdjustmentCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryAdjustmentCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "InventoryAdjustment"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/inventoryAdjustment"
              }
            }
          }
        },
        "tags": [
          "InventoryAdjustment"
        ]
      }
    },
    "/inventoryAdjustment/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "InventoryAdjustment"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryAdjustment"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryAdjustment"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "InventoryAdjustment"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/inventoryAdjustment"
              }
            }
          }
        },
        "tags": [
          "InventoryAdjustment"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/inventoryAdjustment"
              }
            }
          }
        },
        "tags": [
          "InventoryAdjustment"
        ]
      }
    },
    "/inventoryCostRevaluation": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryCostRevaluationCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryCostRevaluationCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "InventoryCostRevaluation"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/inventoryCostRevaluation"
              }
            }
          }
        },
        "tags": [
          "InventoryCostRevaluation"
        ]
      }
    },
    "/inventoryCostRevaluation/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "InventoryCostRevaluation"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryCostRevaluation"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryCostRevaluation"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "InventoryCostRevaluation"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/inventoryCostRevaluation"
              }
            }
          }
        },
        "tags": [
          "InventoryCostRevaluation"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/inventoryCostRevaluation"
              }
            }
          }
        },
        "tags": [
          "InventoryCostRevaluation"
        ]
      }
    },
    "/inventoryCount": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryCountCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryCountCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "InventoryCount"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/inventoryCount"
              }
            }
          }
        },
        "tags": [
          "InventoryCount"
        ]
      }
    },
    "/inventoryCount/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "InventoryCount"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryCount"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryCount"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "InventoryCount"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/inventoryCount"
              }
            }
          }
        },
        "tags": [
          "InventoryCount"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/inventoryCount"
              }
            }
          }
        },
        "tags": [
          "InventoryCount"
        ]
      }
    },
    "/inventoryItem": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryItemCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryItemCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "InventoryItem"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/inventoryItem"
              }
            }
          }
        },
        "tags": [
          "InventoryItem"
        ]
      }
    },
    "/inventoryItem/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "InventoryItem"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryItem"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryItem"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "InventoryItem"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/inventoryItem"
              }
            }
          }
        },
        "tags": [
          "InventoryItem"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/inventoryItem"
              }
            }
          }
        },
        "tags": [
          "InventoryItem"
        ]
      }
    },
    "/inventoryNumber": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryNumberCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryNumberCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "InventoryNumber"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/inventoryNumber"
              }
            }
          }
        },
        "tags": [
          "InventoryNumber"
        ]
      }
    },
    "/inventoryNumber/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "InventoryNumber"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryNumber"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryNumber"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "InventoryNumber"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/inventoryNumber"
              }
            }
          }
        },
        "tags": [
          "InventoryNumber"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/inventoryNumber"
              }
            }
          }
        },
        "tags": [
          "InventoryNumber"
        ]
      }
    },
    "/inventoryTransfer": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryTransferCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryTransferCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "InventoryTransfer"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/inventoryTransfer"
              }
            }
          }
        },
        "tags": [
          "InventoryTransfer"
        ]
      }
    },
    "/inventoryTransfer/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "InventoryTransfer"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryTransfer"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/inventoryTransfer"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "InventoryTransfer"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/inventoryTransfer"
              }
            }
          }
        },
        "tags": [
          "InventoryTransfer"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/inventoryTransfer"
              }
            }
          }
        },
        "tags": [
          "InventoryTransfer"
        ]
      }
    },
    "/invoice": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/invoiceCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/invoiceCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Invoice"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/invoice"
              }
            }
          }
        },
        "tags": [
          "Invoice"
        ]
      }
    },
    "/invoice/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Invoice"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/invoice"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/invoice"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Invoice"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/invoice"
              }
            }
          }
        },
        "tags": [
          "Invoice"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/invoice"
              }
            }
          }
        },
        "tags": [
          "Invoice"
        ]
      }
    },
    "/invoice/{id}/!transform/creditMemo": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/creditMemo"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/creditMemo"
                }
              }
            }
          }
        },
        "summary": "Transform to creditMemo.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/creditMemo"
              }
            }
          }
        },
        "tags": [
          "Invoice"
        ]
      }
    },
    "/invoice/{id}/!transform/customerPayment": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerPayment"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customerPayment"
                }
              }
            }
          }
        },
        "summary": "Transform to customerPayment.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customerPayment"
              }
            }
          }
        },
        "tags": [
          "Invoice"
        ]
      }
    },
    "/invoice/{id}/!transform/returnAuthorization": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/returnAuthorization"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/returnAuthorization"
                }
              }
            }
          }
        },
        "summary": "Transform to returnAuthorization.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/returnAuthorization"
              }
            }
          }
        },
        "tags": [
          "Invoice"
        ]
      }
    },
    "/issue": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/issueCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/issueCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Issue"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/issue"
              }
            }
          }
        },
        "tags": [
          "Issue"
        ]
      }
    },
    "/issue/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Issue"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/issue"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/issue"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Issue"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/issue"
              }
            }
          }
        },
        "tags": [
          "Issue"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/issue"
              }
            }
          }
        },
        "tags": [
          "Issue"
        ]
      }
    },
    "/itemFulfillment": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemFulfillmentCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemFulfillmentCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "ItemFulfillment"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/itemFulfillment"
              }
            }
          }
        },
        "tags": [
          "ItemFulfillment"
        ]
      }
    },
    "/itemFulfillment/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "ItemFulfillment"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemFulfillment"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemFulfillment"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ItemFulfillment"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/itemFulfillment"
              }
            }
          }
        },
        "tags": [
          "ItemFulfillment"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/itemFulfillment"
              }
            }
          }
        },
        "tags": [
          "ItemFulfillment"
        ]
      }
    },
    "/itemGroup": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemGroupCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemGroupCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "ItemGroup"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/itemGroup"
              }
            }
          }
        },
        "tags": [
          "ItemGroup"
        ]
      }
    },
    "/itemGroup/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "ItemGroup"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemGroup"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemGroup"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ItemGroup"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/itemGroup"
              }
            }
          }
        },
        "tags": [
          "ItemGroup"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/itemGroup"
              }
            }
          }
        },
        "tags": [
          "ItemGroup"
        ]
      }
    },
    "/itemReceipt": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemReceiptCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemReceiptCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "ItemReceipt"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/itemReceipt"
              }
            }
          }
        },
        "tags": [
          "ItemReceipt"
        ]
      }
    },
    "/itemReceipt/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "ItemReceipt"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemReceipt"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemReceipt"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ItemReceipt"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/itemReceipt"
              }
            }
          }
        },
        "tags": [
          "ItemReceipt"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/itemReceipt"
              }
            }
          }
        },
        "tags": [
          "ItemReceipt"
        ]
      }
    },
    "/itemRevision": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemRevisionCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemRevisionCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "ItemRevision"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/itemRevision"
              }
            }
          }
        },
        "tags": [
          "ItemRevision"
        ]
      }
    },
    "/itemRevision/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "ItemRevision"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemRevision"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemRevision"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ItemRevision"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/itemRevision"
              }
            }
          }
        },
        "tags": [
          "ItemRevision"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/itemRevision"
              }
            }
          }
        },
        "tags": [
          "ItemRevision"
        ]
      }
    },
    "/job": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/jobCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/jobCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Job"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/job"
              }
            }
          }
        },
        "tags": [
          "Job"
        ]
      }
    },
    "/job/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Job"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/job"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/job"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Job"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/job"
              }
            }
          }
        },
        "tags": [
          "Job"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/job"
              }
            }
          }
        },
        "tags": [
          "Job"
        ]
      }
    },
    "/job/{id}/!transform/cashSale": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashSale"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashSale"
                }
              }
            }
          }
        },
        "summary": "Transform to cashSale.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/cashSale"
              }
            }
          }
        },
        "tags": [
          "Job"
        ]
      }
    },
    "/job/{id}/!transform/estimate": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/estimate"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/estimate"
                }
              }
            }
          }
        },
        "summary": "Transform to estimate.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/estimate"
              }
            }
          }
        },
        "tags": [
          "Job"
        ]
      }
    },
    "/job/{id}/!transform/invoice": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/invoice"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/invoice"
                }
              }
            }
          }
        },
        "summary": "Transform to invoice.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/invoice"
              }
            }
          }
        },
        "tags": [
          "Job"
        ]
      }
    },
    "/job/{id}/!transform/salesOrder": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/salesOrder"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/salesOrder"
                }
              }
            }
          }
        },
        "summary": "Transform to salesOrder.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/salesOrder"
              }
            }
          }
        },
        "tags": [
          "Job"
        ]
      }
    },
    "/jobStatus": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/jobStatusCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/jobStatusCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "JobStatus"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/jobStatus"
              }
            }
          }
        },
        "tags": [
          "JobStatus"
        ]
      }
    },
    "/jobStatus/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "JobStatus"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/jobStatus"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/jobStatus"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "JobStatus"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/jobStatus"
              }
            }
          }
        },
        "tags": [
          "JobStatus"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/jobStatus"
              }
            }
          }
        },
        "tags": [
          "JobStatus"
        ]
      }
    },
    "/jobType": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/jobTypeCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/jobTypeCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "JobType"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/jobType"
              }
            }
          }
        },
        "tags": [
          "JobType"
        ]
      }
    },
    "/jobType/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "JobType"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/jobType"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/jobType"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "JobType"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/jobType"
              }
            }
          }
        },
        "tags": [
          "JobType"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/jobType"
              }
            }
          }
        },
        "tags": [
          "JobType"
        ]
      }
    },
    "/journalEntry": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/journalEntryCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/journalEntryCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "JournalEntry"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/journalEntry"
              }
            }
          }
        },
        "tags": [
          "JournalEntry"
        ]
      }
    },
    "/journalEntry/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "JournalEntry"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/journalEntry"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/journalEntry"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "JournalEntry"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/journalEntry"
              }
            }
          }
        },
        "tags": [
          "JournalEntry"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/journalEntry"
              }
            }
          }
        },
        "tags": [
          "JournalEntry"
        ]
      }
    },
    "/kitItem": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/kitItemCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/kitItemCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "KitItem"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/kitItem"
              }
            }
          }
        },
        "tags": [
          "KitItem"
        ]
      }
    },
    "/kitItem/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "KitItem"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/kitItem"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/kitItem"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "KitItem"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/kitItem"
              }
            }
          }
        },
        "tags": [
          "KitItem"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/kitItem"
              }
            }
          }
        },
        "tags": [
          "KitItem"
        ]
      }
    },
    "/location": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/locationCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/locationCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Location"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/location"
              }
            }
          }
        },
        "tags": [
          "Location"
        ]
      }
    },
    "/location/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Location"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/location"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/location"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Location"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/location"
              }
            }
          }
        },
        "tags": [
          "Location"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/location"
              }
            }
          }
        },
        "tags": [
          "Location"
        ]
      }
    },
    "/manufacturingCostTemplate": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/manufacturingCostTemplateCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/manufacturingCostTemplateCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "ManufacturingCostTemplate"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/manufacturingCostTemplate"
              }
            }
          }
        },
        "tags": [
          "ManufacturingCostTemplate"
        ]
      }
    },
    "/manufacturingCostTemplate/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "ManufacturingCostTemplate"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/manufacturingCostTemplate"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/manufacturingCostTemplate"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ManufacturingCostTemplate"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/manufacturingCostTemplate"
              }
            }
          }
        },
        "tags": [
          "ManufacturingCostTemplate"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/manufacturingCostTemplate"
              }
            }
          }
        },
        "tags": [
          "ManufacturingCostTemplate"
        ]
      }
    },
    "/manufacturingOperationTask": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/manufacturingOperationTaskCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/manufacturingOperationTaskCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "ManufacturingOperationTask"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/manufacturingOperationTask"
              }
            }
          }
        },
        "tags": [
          "ManufacturingOperationTask"
        ]
      }
    },
    "/manufacturingOperationTask/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "ManufacturingOperationTask"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/manufacturingOperationTask"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/manufacturingOperationTask"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ManufacturingOperationTask"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/manufacturingOperationTask"
              }
            }
          }
        },
        "tags": [
          "ManufacturingOperationTask"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/manufacturingOperationTask"
              }
            }
          }
        },
        "tags": [
          "ManufacturingOperationTask"
        ]
      }
    },
    "/manufacturingRouting": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/manufacturingRoutingCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/manufacturingRoutingCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "ManufacturingRouting"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/manufacturingRouting"
              }
            }
          }
        },
        "tags": [
          "ManufacturingRouting"
        ]
      }
    },
    "/manufacturingRouting/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "ManufacturingRouting"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/manufacturingRouting"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/manufacturingRouting"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ManufacturingRouting"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/manufacturingRouting"
              }
            }
          }
        },
        "tags": [
          "ManufacturingRouting"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/manufacturingRouting"
              }
            }
          }
        },
        "tags": [
          "ManufacturingRouting"
        ]
      }
    },
    "/markupItem": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/markupItemCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/markupItemCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "MarkupItem"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/markupItem"
              }
            }
          }
        },
        "tags": [
          "MarkupItem"
        ]
      }
    },
    "/markupItem/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "MarkupItem"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/markupItem"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/markupItem"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "MarkupItem"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/markupItem"
              }
            }
          }
        },
        "tags": [
          "MarkupItem"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/markupItem"
              }
            }
          }
        },
        "tags": [
          "MarkupItem"
        ]
      }
    },
    "/message": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/messageCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/messageCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Message"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/message"
              }
            }
          }
        },
        "tags": [
          "Message"
        ]
      }
    },
    "/message/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Message"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/message"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/message"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Message"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/message"
              }
            }
          }
        },
        "tags": [
          "Message"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/message"
              }
            }
          }
        },
        "tags": [
          "Message"
        ]
      }
    },
    "/nexus": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nexusCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nexusCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Nexus"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/nexus"
              }
            }
          }
        },
        "tags": [
          "Nexus"
        ]
      }
    },
    "/nexus/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Nexus"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nexus"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nexus"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Nexus"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/nexus"
              }
            }
          }
        },
        "tags": [
          "Nexus"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/nexus"
              }
            }
          }
        },
        "tags": [
          "Nexus"
        ]
      }
    },
    "/nonInventoryPurchaseItem": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nonInventoryPurchaseItemCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nonInventoryPurchaseItemCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "NonInventoryPurchaseItem"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/nonInventoryPurchaseItem"
              }
            }
          }
        },
        "tags": [
          "NonInventoryPurchaseItem"
        ]
      }
    },
    "/nonInventoryPurchaseItem/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "NonInventoryPurchaseItem"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nonInventoryPurchaseItem"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nonInventoryPurchaseItem"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "NonInventoryPurchaseItem"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/nonInventoryPurchaseItem"
              }
            }
          }
        },
        "tags": [
          "NonInventoryPurchaseItem"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/nonInventoryPurchaseItem"
              }
            }
          }
        },
        "tags": [
          "NonInventoryPurchaseItem"
        ]
      }
    },
    "/nonInventoryResaleItem": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nonInventoryResaleItemCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nonInventoryResaleItemCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "NonInventoryResaleItem"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/nonInventoryResaleItem"
              }
            }
          }
        },
        "tags": [
          "NonInventoryResaleItem"
        ]
      }
    },
    "/nonInventoryResaleItem/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "NonInventoryResaleItem"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nonInventoryResaleItem"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nonInventoryResaleItem"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "NonInventoryResaleItem"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/nonInventoryResaleItem"
              }
            }
          }
        },
        "tags": [
          "NonInventoryResaleItem"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/nonInventoryResaleItem"
              }
            }
          }
        },
        "tags": [
          "NonInventoryResaleItem"
        ]
      }
    },
    "/nonInventorySaleItem": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nonInventorySaleItemCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nonInventorySaleItemCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "NonInventorySaleItem"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/nonInventorySaleItem"
              }
            }
          }
        },
        "tags": [
          "NonInventorySaleItem"
        ]
      }
    },
    "/nonInventorySaleItem/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "NonInventorySaleItem"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nonInventorySaleItem"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nonInventorySaleItem"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "NonInventorySaleItem"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/nonInventorySaleItem"
              }
            }
          }
        },
        "tags": [
          "NonInventorySaleItem"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/nonInventorySaleItem"
              }
            }
          }
        },
        "tags": [
          "NonInventorySaleItem"
        ]
      }
    },
    "/noteType": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/noteTypeCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/noteTypeCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "NoteType"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/noteType"
              }
            }
          }
        },
        "tags": [
          "NoteType"
        ]
      }
    },
    "/noteType/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "NoteType"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/noteType"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/noteType"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "NoteType"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/noteType"
              }
            }
          }
        },
        "tags": [
          "NoteType"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/noteType"
              }
            }
          }
        },
        "tags": [
          "NoteType"
        ]
      }
    },
    "/opportunity": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/opportunityCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/opportunityCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Opportunity"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/opportunity"
              }
            }
          }
        },
        "tags": [
          "Opportunity"
        ]
      }
    },
    "/opportunity/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Opportunity"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/opportunity"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/opportunity"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Opportunity"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/opportunity"
              }
            }
          }
        },
        "tags": [
          "Opportunity"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/opportunity"
              }
            }
          }
        },
        "tags": [
          "Opportunity"
        ]
      }
    },
    "/opportunity/{id}/!transform/cashSale": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashSale"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashSale"
                }
              }
            }
          }
        },
        "summary": "Transform to cashSale.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/cashSale"
              }
            }
          }
        },
        "tags": [
          "Opportunity"
        ]
      }
    },
    "/opportunity/{id}/!transform/estimate": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/estimate"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/estimate"
                }
              }
            }
          }
        },
        "summary": "Transform to estimate.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/estimate"
              }
            }
          }
        },
        "tags": [
          "Opportunity"
        ]
      }
    },
    "/opportunity/{id}/!transform/invoice": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/invoice"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/invoice"
                }
              }
            }
          }
        },
        "summary": "Transform to invoice.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/invoice"
              }
            }
          }
        },
        "tags": [
          "Opportunity"
        ]
      }
    },
    "/opportunity/{id}/!transform/salesOrder": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/salesOrder"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/salesOrder"
                }
              }
            }
          }
        },
        "summary": "Transform to salesOrder.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/salesOrder"
              }
            }
          }
        },
        "tags": [
          "Opportunity"
        ]
      }
    },
    "/otherChargePurchaseItem": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/otherChargePurchaseItemCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/otherChargePurchaseItemCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "OtherChargePurchaseItem"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/otherChargePurchaseItem"
              }
            }
          }
        },
        "tags": [
          "OtherChargePurchaseItem"
        ]
      }
    },
    "/otherChargePurchaseItem/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "OtherChargePurchaseItem"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/otherChargePurchaseItem"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/otherChargePurchaseItem"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "OtherChargePurchaseItem"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/otherChargePurchaseItem"
              }
            }
          }
        },
        "tags": [
          "OtherChargePurchaseItem"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/otherChargePurchaseItem"
              }
            }
          }
        },
        "tags": [
          "OtherChargePurchaseItem"
        ]
      }
    },
    "/otherChargeResaleItem": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/otherChargeResaleItemCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/otherChargeResaleItemCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "OtherChargeResaleItem"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/otherChargeResaleItem"
              }
            }
          }
        },
        "tags": [
          "OtherChargeResaleItem"
        ]
      }
    },
    "/otherChargeResaleItem/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "OtherChargeResaleItem"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/otherChargeResaleItem"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/otherChargeResaleItem"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "OtherChargeResaleItem"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/otherChargeResaleItem"
              }
            }
          }
        },
        "tags": [
          "OtherChargeResaleItem"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/otherChargeResaleItem"
              }
            }
          }
        },
        "tags": [
          "OtherChargeResaleItem"
        ]
      }
    },
    "/otherChargeSaleItem": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/otherChargeSaleItemCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/otherChargeSaleItemCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "OtherChargeSaleItem"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/otherChargeSaleItem"
              }
            }
          }
        },
        "tags": [
          "OtherChargeSaleItem"
        ]
      }
    },
    "/otherChargeSaleItem/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "OtherChargeSaleItem"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/otherChargeSaleItem"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/otherChargeSaleItem"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "OtherChargeSaleItem"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/otherChargeSaleItem"
              }
            }
          }
        },
        "tags": [
          "OtherChargeSaleItem"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/otherChargeSaleItem"
              }
            }
          }
        },
        "tags": [
          "OtherChargeSaleItem"
        ]
      }
    },
    "/otherName": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/otherNameCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/otherNameCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "OtherName"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/otherName"
              }
            }
          }
        },
        "tags": [
          "OtherName"
        ]
      }
    },
    "/otherName/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "OtherName"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/otherName"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/otherName"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "OtherName"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/otherName"
              }
            }
          }
        },
        "tags": [
          "OtherName"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/otherName"
              }
            }
          }
        },
        "tags": [
          "OtherName"
        ]
      }
    },
    "/otherNameCategory": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/otherNameCategoryCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/otherNameCategoryCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "OtherNameCategory"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/otherNameCategory"
              }
            }
          }
        },
        "tags": [
          "OtherNameCategory"
        ]
      }
    },
    "/otherNameCategory/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "OtherNameCategory"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/otherNameCategory"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/otherNameCategory"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "OtherNameCategory"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/otherNameCategory"
              }
            }
          }
        },
        "tags": [
          "OtherNameCategory"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/otherNameCategory"
              }
            }
          }
        },
        "tags": [
          "OtherNameCategory"
        ]
      }
    },
    "/partner": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/partnerCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/partnerCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Partner"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/partner"
              }
            }
          }
        },
        "tags": [
          "Partner"
        ]
      }
    },
    "/partner/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Partner"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/partner"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/partner"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Partner"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/partner"
              }
            }
          }
        },
        "tags": [
          "Partner"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/partner"
              }
            }
          }
        },
        "tags": [
          "Partner"
        ]
      }
    },
    "/paycheck": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/paycheckCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/paycheckCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Paycheck"
        ]
      }
    },
    "/paycheck/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/paycheck"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/paycheck"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Paycheck"
        ]
      }
    },
    "/paymentItem": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/paymentItemCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/paymentItemCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "PaymentItem"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/paymentItem"
              }
            }
          }
        },
        "tags": [
          "PaymentItem"
        ]
      }
    },
    "/paymentItem/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "PaymentItem"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/paymentItem"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/paymentItem"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "PaymentItem"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/paymentItem"
              }
            }
          }
        },
        "tags": [
          "PaymentItem"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/paymentItem"
              }
            }
          }
        },
        "tags": [
          "PaymentItem"
        ]
      }
    },
    "/paymentMethod": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/paymentMethodCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/paymentMethodCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "PaymentMethod"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/paymentMethod"
              }
            }
          }
        },
        "tags": [
          "PaymentMethod"
        ]
      }
    },
    "/paymentMethod/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "PaymentMethod"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/paymentMethod"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/paymentMethod"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "PaymentMethod"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/paymentMethod"
              }
            }
          }
        },
        "tags": [
          "PaymentMethod"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/paymentMethod"
              }
            }
          }
        },
        "tags": [
          "PaymentMethod"
        ]
      }
    },
    "/phoneCall": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/phoneCallCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/phoneCallCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "PhoneCall"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/phoneCall"
              }
            }
          }
        },
        "tags": [
          "PhoneCall"
        ]
      }
    },
    "/phoneCall/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "PhoneCall"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/phoneCall"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/phoneCall"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "PhoneCall"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/phoneCall"
              }
            }
          }
        },
        "tags": [
          "PhoneCall"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/phoneCall"
              }
            }
          }
        },
        "tags": [
          "PhoneCall"
        ]
      }
    },
    "/priceBook": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/priceBookCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/priceBookCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "PriceBook"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/priceBook"
              }
            }
          }
        },
        "tags": [
          "PriceBook"
        ]
      }
    },
    "/priceBook/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "PriceBook"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/priceBook"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/priceBook"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "PriceBook"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/priceBook"
              }
            }
          }
        },
        "tags": [
          "PriceBook"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/priceBook"
              }
            }
          }
        },
        "tags": [
          "PriceBook"
        ]
      }
    },
    "/priceLevel": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/priceLevelCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/priceLevelCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "PriceLevel"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/priceLevel"
              }
            }
          }
        },
        "tags": [
          "PriceLevel"
        ]
      }
    },
    "/priceLevel/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "PriceLevel"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/priceLevel"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/priceLevel"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "PriceLevel"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/priceLevel"
              }
            }
          }
        },
        "tags": [
          "PriceLevel"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/priceLevel"
              }
            }
          }
        },
        "tags": [
          "PriceLevel"
        ]
      }
    },
    "/pricePlan": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/pricePlanCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/pricePlanCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "PricePlan"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/pricePlan"
              }
            }
          }
        },
        "tags": [
          "PricePlan"
        ]
      }
    },
    "/pricePlan/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "PricePlan"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/pricePlan"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/pricePlan"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "PricePlan"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/pricePlan"
              }
            }
          }
        },
        "tags": [
          "PricePlan"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/pricePlan"
              }
            }
          }
        },
        "tags": [
          "PricePlan"
        ]
      }
    },
    "/pricingGroup": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/pricingGroupCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/pricingGroupCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "PricingGroup"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/pricingGroup"
              }
            }
          }
        },
        "tags": [
          "PricingGroup"
        ]
      }
    },
    "/pricingGroup/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "PricingGroup"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/pricingGroup"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/pricingGroup"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "PricingGroup"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/pricingGroup"
              }
            }
          }
        },
        "tags": [
          "PricingGroup"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/pricingGroup"
              }
            }
          }
        },
        "tags": [
          "PricingGroup"
        ]
      }
    },
    "/projectTask": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/projectTaskCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/projectTaskCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "ProjectTask"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/projectTask"
              }
            }
          }
        },
        "tags": [
          "ProjectTask"
        ]
      }
    },
    "/projectTask/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "ProjectTask"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/projectTask"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/projectTask"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ProjectTask"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/projectTask"
              }
            }
          }
        },
        "tags": [
          "ProjectTask"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/projectTask"
              }
            }
          }
        },
        "tags": [
          "ProjectTask"
        ]
      }
    },
    "/promotionCode": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/promotionCodeCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/promotionCodeCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "PromotionCode"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/promotionCode"
              }
            }
          }
        },
        "tags": [
          "PromotionCode"
        ]
      }
    },
    "/promotionCode/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "PromotionCode"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/promotionCode"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/promotionCode"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "PromotionCode"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/promotionCode"
              }
            }
          }
        },
        "tags": [
          "PromotionCode"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/promotionCode"
              }
            }
          }
        },
        "tags": [
          "PromotionCode"
        ]
      }
    },
    "/purchaseContract": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/purchaseContractCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/purchaseContractCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "PurchaseContract"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/purchaseContract"
              }
            }
          }
        },
        "tags": [
          "PurchaseContract"
        ]
      }
    },
    "/purchaseContract/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "PurchaseContract"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/purchaseContract"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/purchaseContract"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "PurchaseContract"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/purchaseContract"
              }
            }
          }
        },
        "tags": [
          "PurchaseContract"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/purchaseContract"
              }
            }
          }
        },
        "tags": [
          "PurchaseContract"
        ]
      }
    },
    "/purchaseOrder": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/purchaseOrderCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/purchaseOrderCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "PurchaseOrder"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/purchaseOrder"
              }
            }
          }
        },
        "tags": [
          "PurchaseOrder"
        ]
      }
    },
    "/purchaseOrder/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "PurchaseOrder"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/purchaseOrder"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/purchaseOrder"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "PurchaseOrder"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/purchaseOrder"
              }
            }
          }
        },
        "tags": [
          "PurchaseOrder"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/purchaseOrder"
              }
            }
          }
        },
        "tags": [
          "PurchaseOrder"
        ]
      }
    },
    "/purchaseOrder/{id}/!transform/itemReceipt": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemReceipt"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemReceipt"
                }
              }
            }
          }
        },
        "summary": "Transform to itemReceipt.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/itemReceipt"
              }
            }
          }
        },
        "tags": [
          "PurchaseOrder"
        ]
      }
    },
    "/purchaseOrder/{id}/!transform/vendorBill": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorBill"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorBill"
                }
              }
            }
          }
        },
        "summary": "Transform to vendorBill.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorBill"
              }
            }
          }
        },
        "tags": [
          "PurchaseOrder"
        ]
      }
    },
    "/purchaseOrder/{id}/!transform/vendorReturnAuthorization": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorReturnAuthorization"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorReturnAuthorization"
                }
              }
            }
          }
        },
        "summary": "Transform to vendorReturnAuthorization.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorReturnAuthorization"
              }
            }
          }
        },
        "tags": [
          "PurchaseOrder"
        ]
      }
    },
    "/purchaseRequisition": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/purchaseRequisitionCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/purchaseRequisitionCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "PurchaseRequisition"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/purchaseRequisition"
              }
            }
          }
        },
        "tags": [
          "PurchaseRequisition"
        ]
      }
    },
    "/purchaseRequisition/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "PurchaseRequisition"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/purchaseRequisition"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/purchaseRequisition"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "PurchaseRequisition"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/purchaseRequisition"
              }
            }
          }
        },
        "tags": [
          "PurchaseRequisition"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/purchaseRequisition"
              }
            }
          }
        },
        "tags": [
          "PurchaseRequisition"
        ]
      }
    },
    "/purchaseRequisition/{id}/!transform/purchaseOrder": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/purchaseOrder"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/purchaseOrder"
                }
              }
            }
          }
        },
        "summary": "Transform to purchaseOrder.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/purchaseOrder"
              }
            }
          }
        },
        "tags": [
          "PurchaseRequisition"
        ]
      }
    },
    "/resourceGroup": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/resourceGroupCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/resourceGroupCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "ResourceGroup"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/resourceGroup"
              }
            }
          }
        },
        "tags": [
          "ResourceGroup"
        ]
      }
    },
    "/resourceGroup/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "ResourceGroup"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/resourceGroup"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/resourceGroup"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ResourceGroup"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/resourceGroup"
              }
            }
          }
        },
        "tags": [
          "ResourceGroup"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/resourceGroup"
              }
            }
          }
        },
        "tags": [
          "ResourceGroup"
        ]
      }
    },
    "/returnAuthorization": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/returnAuthorizationCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/returnAuthorizationCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "ReturnAuthorization"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/returnAuthorization"
              }
            }
          }
        },
        "tags": [
          "ReturnAuthorization"
        ]
      }
    },
    "/returnAuthorization/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "ReturnAuthorization"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/returnAuthorization"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/returnAuthorization"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ReturnAuthorization"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/returnAuthorization"
              }
            }
          }
        },
        "tags": [
          "ReturnAuthorization"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/returnAuthorization"
              }
            }
          }
        },
        "tags": [
          "ReturnAuthorization"
        ]
      }
    },
    "/returnAuthorization/{id}/!transform/cashRefund": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashRefund"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashRefund"
                }
              }
            }
          }
        },
        "summary": "Transform to cashRefund.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/cashRefund"
              }
            }
          }
        },
        "tags": [
          "ReturnAuthorization"
        ]
      }
    },
    "/returnAuthorization/{id}/!transform/creditMemo": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/creditMemo"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/creditMemo"
                }
              }
            }
          }
        },
        "summary": "Transform to creditMemo.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/creditMemo"
              }
            }
          }
        },
        "tags": [
          "ReturnAuthorization"
        ]
      }
    },
    "/returnAuthorization/{id}/!transform/itemReceipt": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemReceipt"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemReceipt"
                }
              }
            }
          }
        },
        "summary": "Transform to itemReceipt.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/itemReceipt"
              }
            }
          }
        },
        "tags": [
          "ReturnAuthorization"
        ]
      }
    },
    "/revRecSchedule": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/revRecScheduleCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/revRecScheduleCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "RevRecSchedule"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/revRecSchedule"
              }
            }
          }
        },
        "tags": [
          "RevRecSchedule"
        ]
      }
    },
    "/revRecSchedule/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "RevRecSchedule"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/revRecSchedule"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/revRecSchedule"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "RevRecSchedule"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/revRecSchedule"
              }
            }
          }
        },
        "tags": [
          "RevRecSchedule"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/revRecSchedule"
              }
            }
          }
        },
        "tags": [
          "RevRecSchedule"
        ]
      }
    },
    "/revRecTemplate": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/revRecTemplateCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/revRecTemplateCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "RevRecTemplate"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/revRecTemplate"
              }
            }
          }
        },
        "tags": [
          "RevRecTemplate"
        ]
      }
    },
    "/revRecTemplate/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "RevRecTemplate"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/revRecTemplate"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/revRecTemplate"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "RevRecTemplate"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/revRecTemplate"
              }
            }
          }
        },
        "tags": [
          "RevRecTemplate"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/revRecTemplate"
              }
            }
          }
        },
        "tags": [
          "RevRecTemplate"
        ]
      }
    },
    "/salesOrder": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/salesOrderCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/salesOrderCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "SalesOrder"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/salesOrder"
              }
            }
          }
        },
        "tags": [
          "SalesOrder"
        ]
      }
    },
    "/salesOrder/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "SalesOrder"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/salesOrder"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/salesOrder"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SalesOrder"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/salesOrder"
              }
            }
          }
        },
        "tags": [
          "SalesOrder"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/salesOrder"
              }
            }
          }
        },
        "tags": [
          "SalesOrder"
        ]
      }
    },
    "/salesOrder/{id}/!transform/cashSale": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashSale"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/cashSale"
                }
              }
            }
          }
        },
        "summary": "Transform to cashSale.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/cashSale"
              }
            }
          }
        },
        "tags": [
          "SalesOrder"
        ]
      }
    },
    "/salesOrder/{id}/!transform/fulfillmentRequest": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/fulfillmentRequest"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/fulfillmentRequest"
                }
              }
            }
          }
        },
        "summary": "Transform to fulfillmentRequest.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/fulfillmentRequest"
              }
            }
          }
        },
        "tags": [
          "SalesOrder"
        ]
      }
    },
    "/salesOrder/{id}/!transform/invoice": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/invoice"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/invoice"
                }
              }
            }
          }
        },
        "summary": "Transform to invoice.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/invoice"
              }
            }
          }
        },
        "tags": [
          "SalesOrder"
        ]
      }
    },
    "/salesOrder/{id}/!transform/itemFulfillment": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemFulfillment"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemFulfillment"
                }
              }
            }
          }
        },
        "summary": "Transform to itemFulfillment.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/itemFulfillment"
              }
            }
          }
        },
        "tags": [
          "SalesOrder"
        ]
      }
    },
    "/salesOrder/{id}/!transform/returnAuthorization": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/returnAuthorization"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/returnAuthorization"
                }
              }
            }
          }
        },
        "summary": "Transform to returnAuthorization.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/returnAuthorization"
              }
            }
          }
        },
        "tags": [
          "SalesOrder"
        ]
      }
    },
    "/salesRole": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/salesRoleCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/salesRoleCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "SalesRole"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/salesRole"
              }
            }
          }
        },
        "tags": [
          "SalesRole"
        ]
      }
    },
    "/salesRole/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "SalesRole"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/salesRole"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/salesRole"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SalesRole"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/salesRole"
              }
            }
          }
        },
        "tags": [
          "SalesRole"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/salesRole"
              }
            }
          }
        },
        "tags": [
          "SalesRole"
        ]
      }
    },
    "/salesTaxItem": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/salesTaxItemCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/salesTaxItemCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "SalesTaxItem"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/salesTaxItem"
              }
            }
          }
        },
        "tags": [
          "SalesTaxItem"
        ]
      }
    },
    "/salesTaxItem/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "SalesTaxItem"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/salesTaxItem"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/salesTaxItem"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SalesTaxItem"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/salesTaxItem"
              }
            }
          }
        },
        "tags": [
          "SalesTaxItem"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/salesTaxItem"
              }
            }
          }
        },
        "tags": [
          "SalesTaxItem"
        ]
      }
    },
    "/servicePurchaseItem": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/servicePurchaseItemCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/servicePurchaseItemCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "ServicePurchaseItem"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/servicePurchaseItem"
              }
            }
          }
        },
        "tags": [
          "ServicePurchaseItem"
        ]
      }
    },
    "/servicePurchaseItem/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "ServicePurchaseItem"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/servicePurchaseItem"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/servicePurchaseItem"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ServicePurchaseItem"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/servicePurchaseItem"
              }
            }
          }
        },
        "tags": [
          "ServicePurchaseItem"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/servicePurchaseItem"
              }
            }
          }
        },
        "tags": [
          "ServicePurchaseItem"
        ]
      }
    },
    "/serviceResaleItem": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/serviceResaleItemCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/serviceResaleItemCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "ServiceResaleItem"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/serviceResaleItem"
              }
            }
          }
        },
        "tags": [
          "ServiceResaleItem"
        ]
      }
    },
    "/serviceResaleItem/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "ServiceResaleItem"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/serviceResaleItem"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/serviceResaleItem"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ServiceResaleItem"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/serviceResaleItem"
              }
            }
          }
        },
        "tags": [
          "ServiceResaleItem"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/serviceResaleItem"
              }
            }
          }
        },
        "tags": [
          "ServiceResaleItem"
        ]
      }
    },
    "/serviceSaleItem": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/serviceSaleItemCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/serviceSaleItemCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "ServiceSaleItem"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/serviceSaleItem"
              }
            }
          }
        },
        "tags": [
          "ServiceSaleItem"
        ]
      }
    },
    "/serviceSaleItem/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "ServiceSaleItem"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/serviceSaleItem"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/serviceSaleItem"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ServiceSaleItem"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/serviceSaleItem"
              }
            }
          }
        },
        "tags": [
          "ServiceSaleItem"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/serviceSaleItem"
              }
            }
          }
        },
        "tags": [
          "ServiceSaleItem"
        ]
      }
    },
    "/shipItem": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/shipItemCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/shipItemCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "ShipItem"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/shipItem"
              }
            }
          }
        },
        "tags": [
          "ShipItem"
        ]
      }
    },
    "/shipItem/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "ShipItem"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/shipItem"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/shipItem"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "ShipItem"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/shipItem"
              }
            }
          }
        },
        "tags": [
          "ShipItem"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/shipItem"
              }
            }
          }
        },
        "tags": [
          "ShipItem"
        ]
      }
    },
    "/statisticalJournalEntry": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/statisticalJournalEntryCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/statisticalJournalEntryCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "StatisticalJournalEntry"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/statisticalJournalEntry"
              }
            }
          }
        },
        "tags": [
          "StatisticalJournalEntry"
        ]
      }
    },
    "/statisticalJournalEntry/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "StatisticalJournalEntry"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/statisticalJournalEntry"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/statisticalJournalEntry"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "StatisticalJournalEntry"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/statisticalJournalEntry"
              }
            }
          }
        },
        "tags": [
          "StatisticalJournalEntry"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/statisticalJournalEntry"
              }
            }
          }
        },
        "tags": [
          "StatisticalJournalEntry"
        ]
      }
    },
    "/subscription": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subscriptionCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subscriptionCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Subscription"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/subscription"
              }
            }
          }
        },
        "tags": [
          "Subscription"
        ]
      }
    },
    "/subscription/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Subscription"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subscription"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subscription"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Subscription"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/subscription"
              }
            }
          }
        },
        "tags": [
          "Subscription"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/subscription"
              }
            }
          }
        },
        "tags": [
          "Subscription"
        ]
      }
    },
    "/subscriptionChangeOrder": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subscriptionChangeOrderCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subscriptionChangeOrderCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "SubscriptionChangeOrder"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/subscriptionChangeOrder"
              }
            }
          }
        },
        "tags": [
          "SubscriptionChangeOrder"
        ]
      }
    },
    "/subscriptionChangeOrder/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "SubscriptionChangeOrder"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subscriptionChangeOrder"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subscriptionChangeOrder"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SubscriptionChangeOrder"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/subscriptionChangeOrder"
              }
            }
          }
        },
        "tags": [
          "SubscriptionChangeOrder"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/subscriptionChangeOrder"
              }
            }
          }
        },
        "tags": [
          "SubscriptionChangeOrder"
        ]
      }
    },
    "/subscriptionLine": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subscriptionLineCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subscriptionLineCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "SubscriptionLine"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/subscriptionLine"
              }
            }
          }
        },
        "tags": [
          "SubscriptionLine"
        ]
      }
    },
    "/subscriptionLine/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "SubscriptionLine"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subscriptionLine"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subscriptionLine"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SubscriptionLine"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/subscriptionLine"
              }
            }
          }
        },
        "tags": [
          "SubscriptionLine"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/subscriptionLine"
              }
            }
          }
        },
        "tags": [
          "SubscriptionLine"
        ]
      }
    },
    "/subscriptionPlan": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subscriptionPlanCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subscriptionPlanCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "SubscriptionPlan"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/subscriptionPlan"
              }
            }
          }
        },
        "tags": [
          "SubscriptionPlan"
        ]
      }
    },
    "/subscriptionPlan/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "SubscriptionPlan"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subscriptionPlan"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subscriptionPlan"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SubscriptionPlan"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/subscriptionPlan"
              }
            }
          }
        },
        "tags": [
          "SubscriptionPlan"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/subscriptionPlan"
              }
            }
          }
        },
        "tags": [
          "SubscriptionPlan"
        ]
      }
    },
    "/subscriptionTerm": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subscriptionTermCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subscriptionTermCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "SubscriptionTerm"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/subscriptionTerm"
              }
            }
          }
        },
        "tags": [
          "SubscriptionTerm"
        ]
      }
    },
    "/subscriptionTerm/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "SubscriptionTerm"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subscriptionTerm"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subscriptionTerm"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SubscriptionTerm"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/subscriptionTerm"
              }
            }
          }
        },
        "tags": [
          "SubscriptionTerm"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/subscriptionTerm"
              }
            }
          }
        },
        "tags": [
          "SubscriptionTerm"
        ]
      }
    },
    "/subsidiary": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subsidiaryCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subsidiaryCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Subsidiary"
        ]
      }
    },
    "/subsidiary/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subsidiary"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subsidiary"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Subsidiary"
        ]
      }
    },
    "/subtotalItem": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subtotalItemCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subtotalItemCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "SubtotalItem"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/subtotalItem"
              }
            }
          }
        },
        "tags": [
          "SubtotalItem"
        ]
      }
    },
    "/subtotalItem/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "SubtotalItem"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subtotalItem"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/subtotalItem"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SubtotalItem"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/subtotalItem"
              }
            }
          }
        },
        "tags": [
          "SubtotalItem"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/subtotalItem"
              }
            }
          }
        },
        "tags": [
          "SubtotalItem"
        ]
      }
    },
    "/supportCase": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/supportCaseCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/supportCaseCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "SupportCase"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/supportCase"
              }
            }
          }
        },
        "tags": [
          "SupportCase"
        ]
      }
    },
    "/supportCase/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "SupportCase"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/supportCase"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/supportCase"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "SupportCase"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/supportCase"
              }
            }
          }
        },
        "tags": [
          "SupportCase"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/supportCase"
              }
            }
          }
        },
        "tags": [
          "SupportCase"
        ]
      }
    },
    "/task": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/taskCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/taskCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Task"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/task"
              }
            }
          }
        },
        "tags": [
          "Task"
        ]
      }
    },
    "/task/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Task"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/task"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/task"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Task"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/task"
              }
            }
          }
        },
        "tags": [
          "Task"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/task"
              }
            }
          }
        },
        "tags": [
          "Task"
        ]
      }
    },
    "/taxType": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/taxTypeCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/taxTypeCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "TaxType"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/taxType"
              }
            }
          }
        },
        "tags": [
          "TaxType"
        ]
      }
    },
    "/taxType/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "TaxType"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/taxType"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/taxType"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "TaxType"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/taxType"
              }
            }
          }
        },
        "tags": [
          "TaxType"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/taxType"
              }
            }
          }
        },
        "tags": [
          "TaxType"
        ]
      }
    },
    "/term": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/termCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/termCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Term"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/term"
              }
            }
          }
        },
        "tags": [
          "Term"
        ]
      }
    },
    "/term/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Term"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/term"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/term"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Term"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/term"
              }
            }
          }
        },
        "tags": [
          "Term"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/term"
              }
            }
          }
        },
        "tags": [
          "Term"
        ]
      }
    },
    "/timeBill": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/timeBillCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/timeBillCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "TimeBill"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/timeBill"
              }
            }
          }
        },
        "tags": [
          "TimeBill"
        ]
      }
    },
    "/timeBill/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "TimeBill"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/timeBill"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/timeBill"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "TimeBill"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/timeBill"
              }
            }
          }
        },
        "tags": [
          "TimeBill"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/timeBill"
              }
            }
          }
        },
        "tags": [
          "TimeBill"
        ]
      }
    },
    "/timeSheet": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/timeSheetCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/timeSheetCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "TimeSheet"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/timeSheet"
              }
            }
          }
        },
        "tags": [
          "TimeSheet"
        ]
      }
    },
    "/timeSheet/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "TimeSheet"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/timeSheet"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/timeSheet"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "TimeSheet"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/timeSheet"
              }
            }
          }
        },
        "tags": [
          "TimeSheet"
        ]
      }
    },
    "/topic": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/topicCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/topicCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Topic"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/topic"
              }
            }
          }
        },
        "tags": [
          "Topic"
        ]
      }
    },
    "/topic/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Topic"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/topic"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/topic"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Topic"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/topic"
              }
            }
          }
        },
        "tags": [
          "Topic"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/topic"
              }
            }
          }
        },
        "tags": [
          "Topic"
        ]
      }
    },
    "/transferOrder": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/transferOrderCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/transferOrderCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "TransferOrder"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/transferOrder"
              }
            }
          }
        },
        "tags": [
          "TransferOrder"
        ]
      }
    },
    "/transferOrder/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "TransferOrder"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/transferOrder"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/transferOrder"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "TransferOrder"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/transferOrder"
              }
            }
          }
        },
        "tags": [
          "TransferOrder"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/transferOrder"
              }
            }
          }
        },
        "tags": [
          "TransferOrder"
        ]
      }
    },
    "/transferOrder/{id}/!transform/itemFulfillment": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemFulfillment"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemFulfillment"
                }
              }
            }
          }
        },
        "summary": "Transform to itemFulfillment.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/itemFulfillment"
              }
            }
          }
        },
        "tags": [
          "TransferOrder"
        ]
      }
    },
    "/transferOrder/{id}/!transform/itemReceipt": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemReceipt"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemReceipt"
                }
              }
            }
          }
        },
        "summary": "Transform to itemReceipt.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/itemReceipt"
              }
            }
          }
        },
        "tags": [
          "TransferOrder"
        ]
      }
    },
    "/unitsType": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/unitsTypeCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/unitsTypeCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "UnitsType"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/unitsType"
              }
            }
          }
        },
        "tags": [
          "UnitsType"
        ]
      }
    },
    "/unitsType/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "UnitsType"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/unitsType"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/unitsType"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "UnitsType"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/unitsType"
              }
            }
          }
        },
        "tags": [
          "UnitsType"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/unitsType"
              }
            }
          }
        },
        "tags": [
          "UnitsType"
        ]
      }
    },
    "/usage": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/usageCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/usageCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Usage"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/usage"
              }
            }
          }
        },
        "tags": [
          "Usage"
        ]
      }
    },
    "/usage/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Usage"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/usage"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/usage"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Usage"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/usage"
              }
            }
          }
        },
        "tags": [
          "Usage"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/usage"
              }
            }
          }
        },
        "tags": [
          "Usage"
        ]
      }
    },
    "/vendor": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "Vendor"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendor"
              }
            }
          }
        },
        "tags": [
          "Vendor"
        ]
      }
    },
    "/vendor/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Vendor"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendor"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendor"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Vendor"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendor"
              }
            }
          }
        },
        "tags": [
          "Vendor"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendor"
              }
            }
          }
        },
        "tags": [
          "Vendor"
        ]
      }
    },
    "/vendor/{id}/!transform/customer": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customer"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/customer"
                }
              }
            }
          }
        },
        "summary": "Transform to customer.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/customer"
              }
            }
          }
        },
        "tags": [
          "Vendor"
        ]
      }
    },
    "/vendor/{id}/!transform/purchaseOrder": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/purchaseOrder"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/purchaseOrder"
                }
              }
            }
          }
        },
        "summary": "Transform to purchaseOrder.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/purchaseOrder"
              }
            }
          }
        },
        "tags": [
          "Vendor"
        ]
      }
    },
    "/vendor/{id}/!transform/vendorBill": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorBill"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorBill"
                }
              }
            }
          }
        },
        "summary": "Transform to vendorBill.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorBill"
              }
            }
          }
        },
        "tags": [
          "Vendor"
        ]
      }
    },
    "/vendor/{id}/!transform/vendorPayment": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorPayment"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorPayment"
                }
              }
            }
          }
        },
        "summary": "Transform to vendorPayment.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorPayment"
              }
            }
          }
        },
        "tags": [
          "Vendor"
        ]
      }
    },
    "/vendorBill": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorBillCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorBillCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "VendorBill"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorBill"
              }
            }
          }
        },
        "tags": [
          "VendorBill"
        ]
      }
    },
    "/vendorBill/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "VendorBill"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorBill"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorBill"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "VendorBill"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorBill"
              }
            }
          }
        },
        "tags": [
          "VendorBill"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorBill"
              }
            }
          }
        },
        "tags": [
          "VendorBill"
        ]
      }
    },
    "/vendorBill/{id}/!transform/vendorCredit": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorCredit"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorCredit"
                }
              }
            }
          }
        },
        "summary": "Transform to vendorCredit.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorCredit"
              }
            }
          }
        },
        "tags": [
          "VendorBill"
        ]
      }
    },
    "/vendorBill/{id}/!transform/vendorPayment": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorPayment"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorPayment"
                }
              }
            }
          }
        },
        "summary": "Transform to vendorPayment.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorPayment"
              }
            }
          }
        },
        "tags": [
          "VendorBill"
        ]
      }
    },
    "/vendorBill/{id}/!transform/vendorReturnAuthorization": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorReturnAuthorization"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorReturnAuthorization"
                }
              }
            }
          }
        },
        "summary": "Transform to vendorReturnAuthorization.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorReturnAuthorization"
              }
            }
          }
        },
        "tags": [
          "VendorBill"
        ]
      }
    },
    "/vendorCategory": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorCategoryCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorCategoryCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "VendorCategory"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorCategory"
              }
            }
          }
        },
        "tags": [
          "VendorCategory"
        ]
      }
    },
    "/vendorCategory/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "VendorCategory"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorCategory"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorCategory"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "VendorCategory"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorCategory"
              }
            }
          }
        },
        "tags": [
          "VendorCategory"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorCategory"
              }
            }
          }
        },
        "tags": [
          "VendorCategory"
        ]
      }
    },
    "/vendorCredit": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorCreditCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorCreditCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "VendorCredit"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorCredit"
              }
            }
          }
        },
        "tags": [
          "VendorCredit"
        ]
      }
    },
    "/vendorCredit/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "VendorCredit"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorCredit"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorCredit"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "VendorCredit"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorCredit"
              }
            }
          }
        },
        "tags": [
          "VendorCredit"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorCredit"
              }
            }
          }
        },
        "tags": [
          "VendorCredit"
        ]
      }
    },
    "/vendorPayment": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorPaymentCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorPaymentCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "VendorPayment"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorPayment"
              }
            }
          }
        },
        "tags": [
          "VendorPayment"
        ]
      }
    },
    "/vendorPayment/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "VendorPayment"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorPayment"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorPayment"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "VendorPayment"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorPayment"
              }
            }
          }
        },
        "tags": [
          "VendorPayment"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorPayment"
              }
            }
          }
        },
        "tags": [
          "VendorPayment"
        ]
      }
    },
    "/vendorPrepayment": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorPrepaymentCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorPrepaymentCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "VendorPrepayment"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorPrepayment"
              }
            }
          }
        },
        "tags": [
          "VendorPrepayment"
        ]
      }
    },
    "/vendorPrepayment/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "VendorPrepayment"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorPrepayment"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorPrepayment"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "VendorPrepayment"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorPrepayment"
              }
            }
          }
        },
        "tags": [
          "VendorPrepayment"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorPrepayment"
              }
            }
          }
        },
        "tags": [
          "VendorPrepayment"
        ]
      }
    },
    "/vendorPrepayment/{id}/!transform/vendorPrepaymentApplication": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorPrepaymentApplication"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorPrepaymentApplication"
                }
              }
            }
          }
        },
        "summary": "Transform to vendorPrepaymentApplication.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorPrepaymentApplication"
              }
            }
          }
        },
        "tags": [
          "VendorPrepayment"
        ]
      }
    },
    "/vendorPrepaymentApplication": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorPrepaymentApplicationCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorPrepaymentApplicationCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "VendorPrepaymentApplication"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorPrepaymentApplication"
              }
            }
          }
        },
        "tags": [
          "VendorPrepaymentApplication"
        ]
      }
    },
    "/vendorPrepaymentApplication/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "VendorPrepaymentApplication"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorPrepaymentApplication"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorPrepaymentApplication"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "VendorPrepaymentApplication"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorPrepaymentApplication"
              }
            }
          }
        },
        "tags": [
          "VendorPrepaymentApplication"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorPrepaymentApplication"
              }
            }
          }
        },
        "tags": [
          "VendorPrepaymentApplication"
        ]
      }
    },
    "/vendorReturnAuthorization": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorReturnAuthorizationCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorReturnAuthorizationCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "VendorReturnAuthorization"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorReturnAuthorization"
              }
            }
          }
        },
        "tags": [
          "VendorReturnAuthorization"
        ]
      }
    },
    "/vendorReturnAuthorization/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "VendorReturnAuthorization"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorReturnAuthorization"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorReturnAuthorization"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "VendorReturnAuthorization"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorReturnAuthorization"
              }
            }
          }
        },
        "tags": [
          "VendorReturnAuthorization"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorReturnAuthorization"
              }
            }
          }
        },
        "tags": [
          "VendorReturnAuthorization"
        ]
      }
    },
    "/vendorReturnAuthorization/{id}/!transform/itemFulfillment": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemFulfillment"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/itemFulfillment"
                }
              }
            }
          }
        },
        "summary": "Transform to itemFulfillment.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/itemFulfillment"
              }
            }
          }
        },
        "tags": [
          "VendorReturnAuthorization"
        ]
      }
    },
    "/vendorReturnAuthorization/{id}/!transform/vendorCredit": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorCredit"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorCredit"
                }
              }
            }
          }
        },
        "summary": "Transform to vendorCredit.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorCredit"
              }
            }
          }
        },
        "tags": [
          "VendorReturnAuthorization"
        ]
      }
    },
    "/vendorSubsidiaryRelationship": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorSubsidiaryRelationshipCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorSubsidiaryRelationshipCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "VendorSubsidiaryRelationship"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorSubsidiaryRelationship"
              }
            }
          }
        },
        "tags": [
          "VendorSubsidiaryRelationship"
        ]
      }
    },
    "/vendorSubsidiaryRelationship/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "VendorSubsidiaryRelationship"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorSubsidiaryRelationship"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/vendorSubsidiaryRelationship"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "VendorSubsidiaryRelationship"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorSubsidiaryRelationship"
              }
            }
          }
        },
        "tags": [
          "VendorSubsidiaryRelationship"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/vendorSubsidiaryRelationship"
              }
            }
          }
        },
        "tags": [
          "VendorSubsidiaryRelationship"
        ]
      }
    },
    "/webSite": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/webSiteCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/webSiteCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "WebSite"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/webSite"
              }
            }
          }
        },
        "tags": [
          "WebSite"
        ]
      }
    },
    "/webSite/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "WebSite"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/webSite"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/webSite"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WebSite"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/webSite"
              }
            }
          }
        },
        "tags": [
          "WebSite"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/webSite"
              }
            }
          }
        },
        "tags": [
          "WebSite"
        ]
      }
    },
    "/workOrder": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrderCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrderCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "WorkOrder"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/workOrder"
              }
            }
          }
        },
        "tags": [
          "WorkOrder"
        ]
      }
    },
    "/workOrder/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "WorkOrder"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrder"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrder"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WorkOrder"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/workOrder"
              }
            }
          }
        },
        "tags": [
          "WorkOrder"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/workOrder"
              }
            }
          }
        },
        "tags": [
          "WorkOrder"
        ]
      }
    },
    "/workOrder/{id}/!transform/assemblyBuild": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/assemblyBuild"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/assemblyBuild"
                }
              }
            }
          }
        },
        "summary": "Transform to assemblyBuild.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/assemblyBuild"
              }
            }
          }
        },
        "tags": [
          "WorkOrder"
        ]
      }
    },
    "/workOrder/{id}/!transform/workOrderClose": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrderClose"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrderClose"
                }
              }
            }
          }
        },
        "summary": "Transform to workOrderClose.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/workOrderClose"
              }
            }
          }
        },
        "tags": [
          "WorkOrder"
        ]
      }
    },
    "/workOrder/{id}/!transform/workOrderCompletion": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrderCompletion"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrderCompletion"
                }
              }
            }
          }
        },
        "summary": "Transform to workOrderCompletion.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/workOrderCompletion"
              }
            }
          }
        },
        "tags": [
          "WorkOrder"
        ]
      }
    },
    "/workOrder/{id}/!transform/workOrderIssue": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrderIssue"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrderIssue"
                }
              }
            }
          }
        },
        "summary": "Transform to workOrderIssue.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/workOrderIssue"
              }
            }
          }
        },
        "tags": [
          "WorkOrder"
        ]
      }
    },
    "/workOrderClose": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrderCloseCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrderCloseCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "WorkOrderClose"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/workOrderClose"
              }
            }
          }
        },
        "tags": [
          "WorkOrderClose"
        ]
      }
    },
    "/workOrderClose/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "WorkOrderClose"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrderClose"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrderClose"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WorkOrderClose"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/workOrderClose"
              }
            }
          }
        },
        "tags": [
          "WorkOrderClose"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/workOrderClose"
              }
            }
          }
        },
        "tags": [
          "WorkOrderClose"
        ]
      }
    },
    "/workOrderCompletion": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrderCompletionCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrderCompletionCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "WorkOrderCompletion"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/workOrderCompletion"
              }
            }
          }
        },
        "tags": [
          "WorkOrderCompletion"
        ]
      }
    },
    "/workOrderCompletion/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "WorkOrderCompletion"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrderCompletion"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrderCompletion"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WorkOrderCompletion"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/workOrderCompletion"
              }
            }
          }
        },
        "tags": [
          "WorkOrderCompletion"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/workOrderCompletion"
              }
            }
          }
        },
        "tags": [
          "WorkOrderCompletion"
        ]
      }
    },
    "/workOrderIssue": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrderIssueCollection"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrderIssueCollection"
                }
              }
            }
          }
        },
        "summary": "Get list of records.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "description": "The search query that is used to filter results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "description": "The limit used to specify the number of results on a single page.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "offset",
            "description": "The offset used for selecting a specific page of results.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "integer",
              "default": "0"
            }
          }
        ],
        "tags": [
          "WorkOrderIssue"
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/workOrderIssue"
              }
            }
          }
        },
        "tags": [
          "WorkOrderIssue"
        ]
      }
    },
    "/workOrderIssue/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Remove record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "WorkOrderIssue"
        ]
      },
      "get": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrderIssue"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/workOrderIssue"
                }
              }
            }
          }
        },
        "summary": "Get record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "expandSubResources",
            "description": "Set to 'true' to automatically expand all sublists, sublist lines, and subrecords on this record.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "simpleEnumFormat",
            "description": "Set to true to return enumeration values in a format that only shows the internal ID value.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          },
          {
            "name": "fields",
            "description": "The names of the fields and sublists on the record. Only the selected fields and sublists will be returned in the response.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WorkOrderIssue"
        ]
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "Internal identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/workOrderIssue"
              }
            }
          }
        },
        "tags": [
          "WorkOrderIssue"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/nsError"
                }
              }
            }
          }
        },
        "summary": "Insert or update record.",
        "parameters": [
          {
            "name": "Prefer",
            "description": "The server behavior requested by the client. Use 'respond-async' to execute the request asynchronously. If the request is executed asynchronously, 'Preference-applied: respond-async' is returned in the response.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "respond-async"
              ]
            }
          },
          {
            "name": "X-NetSuite-Idempotency-Key",
            "description": "A user-defined unique idempotency key that is applied to every asynchronous requests to ensure that the request is executed only once. Only one request can be executed with every unique idempotency key. Use UUID in string format as defined by RFC 4122. If the request is executed synchronously, this value is ignored.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "External identifier.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-NetSuite-PropertyNameValidation",
            "description": "Sets the strictness of property name validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Warning"
            }
          },
          {
            "name": "X-NetSuite-PropertyValueValidation",
            "description": "Sets the strictness of property value validation.",
            "required": false,
            "in": "header",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "Warning",
                "Ignore"
              ],
              "default": "Error"
            }
          },
          {
            "name": "replace",
            "description": "The names of sublists on this record. All sublist lines will be replaced with lines specified in the request. The names are delimited by comma.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "replaceSelectedFields",
            "description": "If set to 'true', all fields that should be deleted in the update request, including body fields, must be included in the 'replace' query parameter.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": "false"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/workOrderIssue"
              }
            }
          }
        },
        "tags": [
          "WorkOrderIssue"
        ]
      }
    }
  },
  "components": {}
}